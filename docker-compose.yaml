version: '3'

services:
  db:
    image: postgres:14-alpine3.17
    container_name: db_app
    networks:
      - bridge1
    env_file:
      - .env
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 30s
      timeout: 5s
      retries: 5

  app:
    restart: always
    networks:
      - bridge1
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_container
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: >
      bash -c "python  manage.py collectstatic --noinput
      && python manage.py makemigrations
      && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000 --insecure"
#      && gunicorn config.wsgi:application --bind 0.0.0.0:8000"


  web:
    image: nginx
    networks:
      - bridge1
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "0.0.0.0:80:80"
    environment:
      - NGINX_PORT=80
    depends_on:
      - app

networks:
  bridge1:
    driver: bridge
